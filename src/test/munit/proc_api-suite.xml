<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="proc_api-suite.xml" />
	<munit:test name="sys_api-main-test" doc:id="e96dd23f-7680-42d0-aaa5-704484bdafd9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="21a49bc8-b91f-4127-803b-5dda5a8d78f3" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1ae85342-3fef-4f88-96e5-19be3f164853" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://sysapimaintest\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://sysapimaintest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://sysapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[readUrl('classpath://sysapimaintest\mock_variable_1.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="a7a2028d-ae2f-46a8-9e88-0f6c20efde69" >
				<munit:payload value="#[readUrl('classpath://sysapimaintest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://sysapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys_api-main" doc:id="698b0cdb-c902-4771-93cd-c305ff50ea82" name="sys_api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6b84aecc-cb65-4454-832f-1c17ced6953e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sysapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\customer:sys_api-config-test" doc:id="77ffa19e-d940-446d-b839-f13a4b81c4b0" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="9adb9a8e-2506-4558-9b4a-724ba1ea34f0" >
				<munit:payload value="#[readUrl('classpath://getcustomersysapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcustomersysapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcustomersysapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\customer:sys_api-config" doc:id="2e0000a0-ae07-4feb-a88f-beb6623e35f2" name="get:\customer:sys_api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="3fb9c79d-a7ba-4d59-b5f7-8b40847a2bca" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcustomersysapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Flow Reference" doc:id="8bdf9f73-d6b8-48ad-a9e9-670d19b128f4" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a771ecd1-7f97-4afe-bf7b-e7ab827e494f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\customer:application\json:sys_api-config-test" doc:id="80010faf-c065-42f4-ae37-ceea656347d4" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="4c5d1cd5-ce57-41f8-ac89-890d9b00511b" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://postcustomerapplicationjsonsysapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://postcustomerapplicationjsonsysapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcustomerapplicationjsonsysapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\customer:application\json:sys_api-config" doc:id="846fc12e-fdce-41ba-8d91-b09799b79b9b" name="post:\customer:application\json:sys_api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="1c976f4c-9807-42f0-897c-b25a795ddb47" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcustomerapplicationjsonsysapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Flow Reference" doc:id="fddf1829-01ad-47ab-84f8-18075fa92b44" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5835e35b-45f3-4a37-8dbb-208a0848c1bf" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
